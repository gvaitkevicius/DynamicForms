//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamicForms.Areas.SGI.Model
{
    using DynamicForms.Areas.SGI.Model;
    using DynamicForms.Models;
    using DynamicForms.Util;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Metadata.Builders;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public class T_Indicadores
    {
        public T_Indicadores()
        {
            this.T_Grupo_Indicador = new HashSet<T_Grupo_Indicador>();
            this.T_Indicadores_Departamentos = new HashSet<T_Indicadores_Departamentos>();
            this.T_Metas = new HashSet<T_Metas>();
            this.T_Favoritos = new HashSet<T_Favoritos>();
            Dimensoes = new HashSet<Dimensao>();
        }

        [READ][TAB(Value = "PRINCIPAL")] [Display(Name = "ID")] [Required(ErrorMessage = "Campo IND_ID requirido.")] public int IND_ID { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "DESCRICAO")] [Required(ErrorMessage = "Campo IND_DESCRICAO requirido.")] [MaxLength(200, ErrorMessage = "Maximode 200 caracteres, campo IND_DESCRICAO")] public string IND_DESCRICAO { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "NEG ID")] [Required(ErrorMessage = "Campo NEG_ID requirido.")] public int NEG_ID { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "_CALCULO")] [MaxLength(3000, ErrorMessage = "Maximode * caracteres, campo DESC_CALCULO")] public string DESC_CALCULO { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "TIPOCOMPARADOR")] [Required(ErrorMessage = "Campo IND_TIPOCOMPARADOR requirido.")] public int IND_TIPOCOMPARADOR { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "GRAFICO")] public int? IND_GRAFICO { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "CONEXAO")] [MaxLength(100, ErrorMessage = "Maximode 100 caracteres, campo IND_CONEXAO")] public string IND_CONEXAO { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "DTCRIACAO")] public DateTime IND_DTCRIACAO { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "OSAVELIND")] [MaxLength(100, ErrorMessage = "Maximode 100 caracteres, campo RESPOSAVELIND")] public string RESPOSAVELIND { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "OSAVELCARGA")] [MaxLength(100, ErrorMessage = "Maximode 100 caracteres, campo RESPOSAVELCARGA")] public string RESPOSAVELCARGA { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "EXTRACAO")] [MaxLength(100, ErrorMessage = "Maximode 100 caracteres, campo PROCEXTRACAO")] public string PROCEXTRACAO { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "PER ID")] [MaxLength(3, ErrorMessage = "Maximode 3 caracteres, campo PER_ID")] public string PER_ID { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "DIM ID")] public int? DIM_ID { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "EMPRESA")] [MaxLength(30, ErrorMessage = "Maximode 30 caracteres, campo DOM_EMPRESA")] public string DOM_EMPRESA { get; set; }
        [TAB(Value = "PRINCIPAL")] [Display(Name = "FILIAL")] [MaxLength(30, ErrorMessage = "Maximode 30 caracteres, campo DOM_FILIAL")] public string DOM_FILIAL { get; set; }
        [NotMapped] public string PlayAction { get; set; }
        [NotMapped] public string PlayMsgErroValidacao { get; set; }
        [NotMapped] public int? IndexClone { get; set; }
        [NotMapped]
        public virtual ICollection<Dimensao> Dimensoes { get; set; }
        public virtual ICollection<T_Grupo_Indicador> T_Grupo_Indicador { get; set; }
        public virtual ICollection<T_Indicadores_Departamentos> T_Indicadores_Departamentos { get; set; }
        public virtual ICollection<T_Metas> T_Metas { get; set; }
        public virtual T_Negocio T_Negocio { get; set; }
        public virtual ICollection<T_Favoritos> T_Favoritos { get; set; }
        
        public bool BeforeChanges(List<object> objects, ref CloneObjeto cloneObjeto, List<LogPlay> Logs, ref int modo_insert)
        {
            return true;
        } 

        
    }
}
